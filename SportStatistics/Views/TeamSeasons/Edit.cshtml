@model SportStatistics.Models.TeamSeason

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="myTitleComic">Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
   
    <div class="sport-delete sport-div">
        <label class="mTitle">TeamSeason</label>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "myValid2" })
        @Html.HiddenFor(model => model.TeamSeasonId)
        @Html.HiddenFor(model => model.NameTeam)
        
        <div>
            <div>
                @Html.Label("Name Team", htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div class="myContent2-titleE">
                @Html.DisplayFor(model => model.NameTeam)
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Played, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Played, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Played, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomePlayed, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomePlayed, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomePlayed, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Point, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Point, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Point, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomePoint, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomePoint, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomePoint, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Win, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Win, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Win, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomeWin, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomeWin, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomeWin, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Draw, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Draw, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Draw, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomeDraw, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomeDraw, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomeDraw, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Lose, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Lose, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Lose, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomeLose, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomeLose, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomeLose, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.Goals, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.Goals, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.Goals, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomeGoals, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomeGoals, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomeGoals, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.GoalAgainst, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.GoalAgainst, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.GoalAgainst, "", new { @class = "myValid2" })
            </div>
        </div>

        <div>
            <div>
                @Html.LabelFor(model => model.HomeGoalAgainst, htmlAttributes: new { @class = "myTitleText" })
            </div>
            <div>
                @Html.EditorFor(model => model.HomeGoalAgainst, new { htmlAttributes = new { @class = "myContent-field", @type = "number", @min = 0 } })
                @Html.ValidationMessageFor(model => model.HomeGoalAgainst, "", new { @class = "myValid2" })
            </div>
        </div>    
    </div>
    <br class="clear" />
    <p class="mid">
        <input type="submit" value="Save" class="myButtonInfo" />
    </p>
}

<div class="sport-create-l">
    @Html.ActionLink("Back to List", "Index", null, new { @class = "myLinkBack" })
</div>
