@model SportStatistics.Models.ViewModels.ShowPlayer
@{
    ViewBag.Title = "Player";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var grid = new WebGrid();
    var grid2 = new WebGrid();
    if (Model != null)
    {
        grid = new WebGrid(source: Model.Game, defaultSort: "Date", rowsPerPage: 20, ajaxUpdateContainerId: "webGrid");
        grid.SortDirection = SortDirection.Descending;
        grid2 = new WebGrid(source: Model.AllGame, defaultSort: "Total", rowsPerPage: 20, ajaxUpdateContainerId: "webGrid2");
    }
    int p = 0;
    int g = 0;
    int a = 0;
}

@if (Model != null && Model.Player != null)
{
    <section>
        <div>
            <img src="@String.Concat("/images/players/", Convert.ToString(Model.Player.PlayerId), ".jpg")" onerror="this.src = '/images/icon/empty.jpg'" class="imageEdit" alt="" />
        </div>
        <h2>@Model.Player.Name @Model.Player.Surname</h2>
        <h3>Nationality: @Model.Player.Nationality</h3>
        <h3>Brithday: @Model.Player.Birthday</h3>
        <h3>Age: @Model.Player.Age</h3>
        <h3>Height: @Model.Player.Height</h3>
        <h3>Weight: @Model.Player.Weight</h3>
        <h3>Position: @Model.Player.Position</h3>
    
        <div>
            @using (Html.BeginForm("Player", "Home", FormMethod.Post))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.Season, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.Season, htmlAttributes: new { @class = "form-control" })
                        @Html.HiddenFor(model => model.FederationSeasonId)
                        @Html.HiddenFor(model => model.Player.PlayerId)
                        <button id="btn">Ok</button>
                    </div>
                </div>
            }
        </div>  
        <div id="webGrid">
                    @grid.GetHtml(
            tableStyle: "myTable",
            headerStyle: "myTableHeader",
            footerStyle: "myTableFooter",
            columns: grid.Columns(
                    grid.Column("Date", format: model => model.Date),
                    grid.Column("Tournament", format:
                    @<text>
                    @{string name = item.TournamentName; }
                    @Html.ActionLink(name, "Standings", "Home", routeValues:
                                                  new { fedSeason = Model.FederationSeasonId },
                                                  htmlAttributes: null)
                    </text>),
                    grid.Column("Match", format:
                    @<text>
                    @{string name = item.ResultMatch; }
                    @if (name.Count() > 3)
                    {
                        @Html.ActionLink(name, "Match", "Home", routeValues:
                                               new { MatchId = item.MatchId },
                                               htmlAttributes: null)
                    }else
                    {
                        @Html.Label(name);
                    }

                    </text>),
                    grid.Column(header: "Goals", format: model => model.GoalsInGame),
                    grid.Column(header: "Assists", format: model => model.AssistsInGame),
                    grid.Column(header: "G + A", format: model => model.GsummA)
                )
            )            
            @foreach (var item in Model.Game)
            {
                p++;
                g += item.GoalsInGame;
                a += item.AssistsInGame;
            }            
        </div>
        <label>Total: games - @p, goals - @g, assists - @a</label>
        <br />
    
        <div id="webGrid2">
            @grid2.GetHtml(
    tableStyle: "myTable",
    headerStyle: "myTableHeader",
    footerStyle: "myTableFooter",
    columns: grid.Columns(
          grid.Column("Tournament", format:
            @<text>
            @{string name = item.TournamentName; }
            @Html.ActionLink(name, "Standings", "Home", routeValues:
                                          new { fedSeason = Model.FederationSeasonId },
                                          htmlAttributes: null)
            </text>),
            grid.Column(header: "Total Games", format: model => model.TotalGames),
            grid.Column(header: "Total Goals", format: model => model.TotalGoals),
            grid.Column(header: "Total Assists", format: model => model.TotalAssists),
            grid.Column(header: "G + A", format: model => model.GsummA)
              )
            )
            @{
                a = 0; g = 0; p = 0;
                foreach (var item in Model.AllGame)
                {
                    p += item.TotalGames;
                    g += item.TotalGoals;
                    a += item.TotalAssists;
                }
            }
        </div>    
        <label>Total: games - @p, goals - @g, assists - @a</label>
    </section>
}
else
{
    <div>
        <h2>Request failed</h2>
    </div>
}              




